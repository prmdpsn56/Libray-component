"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.webpackFinal = void 0;
const node_logger_1 = require("@storybook/node-logger");
const server_errors_1 = require("@storybook/core-events/server-errors");
const angular_cli_webpack_1 = require("./angular-cli-webpack");
const module_is_available_1 = require("./utils/module-is-available");
async function webpackFinal(baseConfig, options) {
    if (!(0, module_is_available_1.moduleIsAvailable)('@angular-devkit/build-angular')) {
        node_logger_1.logger.info('=> Using base config because "@angular-devkit/build-angular" is not installed');
        return baseConfig;
    }
    checkForLegacyBuildOptions(options);
    return (0, angular_cli_webpack_1.getWebpackConfig)(baseConfig, {
        builderOptions: {
            watch: options.configType === 'DEVELOPMENT',
            ...options.angularBuilderOptions,
        },
        builderContext: options.angularBuilderContext,
    });
}
exports.webpackFinal = webpackFinal;
/**
 * Checks if using legacy configuration that doesn't use builder and logs message referring to migration docs.
 */
function checkForLegacyBuildOptions(options) {
    if (options.angularBrowserTarget !== undefined) {
        // Not use legacy way with builder (`angularBrowserTarget` is defined or null with builder and undefined without)
        return;
    }
    throw new server_errors_1.AngularLegacyBuildOptionsError();
}
